; Generated by AutoGUI 2.6.2
#SingleInstance Force
#NoEnv
#NoTrayIcon
SetWorkingDir %A_ScriptDir%
SetBatchLines -1

if A_Args.Length() > 0
{
	Convert(A_Args)
	ExitApp
}

sendToShorcut := A_AppData . "\Microsoft\Windows\SendTo\" . RegExReplace(A_ScriptName, "\.(exe|ahk)$") . ".lnk"
if (A_IsCompiled)
	icon := A_ScriptFullPath
else
	icon := "Icon.ico"
Menu, Tray, Icon, %icon% ; this will not enable tray icon, but will be visible in window title bar
;@Ahk2Exe-SetMainIcon Icon.ico ; Script Compiler Directives (begins with semicolon! it's not comment!)
; with above command we can ommit /icon parameter during compiling

Gui +AlwaysOnTop
Gui Add, Picture, x8 y8 w64 h64 0x6, %icon%
Gui Font, Bold
Gui Add, Text, x80 y28 w180 h34 vFocusText, Steam Epic URL Converter`nv1.0.0
Gui Add, Button, x8 y472 w345 h25 gCreateShortcutSendTo, Click to &add a shortcut to your "Send to..." menu
Gui Add, Button, x8 y504 w345 h24 gDeleteShortcutSendTo, Click to &remove "Send to..." shortcut
Gui Font ; set default font params
Gui Add, Tab2, x5 y80 w350 h385, General|Changelog ; subsequently added controls automatically belong to first tab
Gui Add, Edit, x10 y104 w340 h357 +Multi +ReadOnly, % GetDescription()
Gui Tab, 2 ; subsequently added controls automatically belong to second tab (you can use tab's Name insteed number)
Gui Font,, Courier New
Gui Add, Edit, x10 y104 w340 h357 +Multi +ReadOnly, % GetChangelog()
; by default single Edit control on first tab will select all text, we change focus to Text control to prevent this behavior
; but then we add second Edit control to second tab and this automatically prevents this behavior
;GuiControl, Focus, vFocusText
;Gui Tab ; subsequently added controls are not part of any tab control, belongs to whole window

Gui Show, w360 h531, Steam Epic URL Converter
Return

GuiEscape:
GuiClose:
	ExitApp

GuiDropFiles(GuiHwnd, FileArray, CtrlHwnd, X, Y) {
	Convert(FileArray)
}

Convert(FileArray)
{
	;Install mixed
	;HKEY_CURRENT_USER\Software\Valve\Steam\SteamExe  ; here path in Linux format
	;HKEY_CURRENT_USER\Software\Valve\Steam\SteamPath ; here path in Linux format
	;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Valve\Steam\InstallPath
	;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Electronic Arts\EADM\ClientPath
	;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\GOG.com\GalaxyClient\paths\Client
	
	;Uninstall x64
	;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\Steam\UninstallString
	;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{A7BBC0A6-3DB0-41CC-BCED-DDFC5D4F3060}\InstallLocation
	;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\Origin\InstallLocation
	;HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\Origin\UninstallString
	
	;HKCR are same for x32 and x64, so more simple to parse (thoughts for future)
	;HKEY_CLASSES_ROOT\steam\Shell\Open\Command
	;HKEY_CLASSES_ROOT\com.epicgames.launcher\Shell\Open\Command
	;HKEY_CLASSES_ROOT\origin\Shell\Open\Command
	;HKEY_CLASSES_ROOT\goggalaxy\Shell\Open\Command
	if (A_Is64bitOS) {
		steamRegistry := "HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\Steam"
		epicRegistry  := "HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\{A7BBC0A6-3DB0-41CC-BCED-DDFC5D4F3060}"
	} else {
		steamRegistry := "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam"
		epicRegistry  := "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{A7BBC0A6-3DB0-41CC-BCED-DDFC5D4F3060}"
	}
	shell := ComObjCreate("WScript.Shell")
	for i, file in FileArray {
		SplitPath, file, name, path, extension, nameNoExt
		if extension not contains url ; non case sensitive,  exclude all non *.URL files
			continue
		;MsgBox File %i% is:`n%file%
		IniRead, url, %file%, InternetShortcut, URL
		IniRead, iconFile, %file%, InternetShortcut, IconFile
		IniRead, iconIndex, %file%, InternetShortcut, IconIndex
		;MsgBox %url%`n%iconFile%`n%iconIndex%
		if (InStr(url, "ERROR") | InStr(IconFile, "ERROR") | InStr(IconIndex, "ERROR")) {
			MsgBox File: %file%`nCan't find all keys.
			continue
		}
		; https://msdn.microsoft.com/en-us/library/xsy6k3ys(v=vs.84).aspx
		lnk := shell.CreateShortcut(path . "\" . nameNoExt . ".lnk")
		if (InStr(url, "steam://") == 1) { ; faster then RegExMatch
		;if (RegExMatch(url, "^steam://")) {
			RegRead, steam, %steamRegistry%, UninstallString
			workingDirectory := RegExReplace(steam, "\\uninstall.exe$")
			lnk.TargetPath := workingDirectory . "\" . "steam.exe"
			lnk.Arguments := "-applaunch " . StrReplace(url, "steam://rungameid/")
		} else if (InStr(url, "com.epicgames.launcher://") == 1) {
		;} else if (RegExMatch(url, "^com.epicgames.launcher://")) {
			RegRead, epic, %epicRegistry%, InstallLocation
			workingDirectory := RTrim(epic, "\")
			if (A_Is64bitOS)
				lnk.TargetPath := workingDirectory . "\" . "Launcher\Portal\Binaries\Win64\EpicGamesLauncher.exe"
			else
				lnk.TargetPath := workingDirectory . "\" . "Launcher\Portal\Binaries\Win32\EpicGamesLauncher.exe"
			lnk.Arguments := url
		}
		lnk.WorkingDirectory := workingDirectory
		lnk.IconLocation := IconFile . "," . IconIndex
		lnk.Save()
	}
}

CreateShortcutSendTo()
{
	global sendToShorcut
	shell := ComObjCreate("WScript.Shell")
	lnk := shell.CreateShortcut(sendToShorcut)
	lnk.TargetPath := A_ScriptFullPath
	lnk.WorkingDirectory := A_ScriptDir
	lnk.IconLocation := A_ScriptFullPath . ",0"
	lnk.Save()
}

DeleteShortcutSendTo()
{
	global sendToShorcut
	if (FileExist(sendToShorcut))
		FileDelete, %sendToShorcut%
}

GetDescription()
{
	return "
(
Description:

    Steam and Epic Game Launcher allows you to create shortcuts on your desktop to launch games.  However, these shortcuts are not standard Windows *.LNK files.  They are *.URL files and, sometimes, they don't show the proper icon for the intended game even if the *.URL file contains the correct information.  This app tries to solve the issue by converting the *.URL shortcut into a *.LNK shortcut.

Instructions:

    1) Drag && drop a Steam or Epic Game Launcher *.URL file onto this window.
    2) A standard Windows shortcut file  will be created in the same directory as the .URL file.
    3) If there is icon information in the .URL file, it will be used for the new shortcut.
    4) Alternately, this app can add a shortcut to your ''Send to'' folder so you can process multiple .URL files by using the ''Send to'' option in your right-click menu.

Credits:

    Special thanks to lanux128 and Jody Holmes (Skwire Empire) for the original idea.
)"
}

GetChangelog()
{
	return "
(
Steam Epic URL Converter
+ added
* changed
- deleted
! bug fixed

v1.0.1 - 2022-05-13

v1.0.0 - 2022-05-12
    + Initial release.
)"
}